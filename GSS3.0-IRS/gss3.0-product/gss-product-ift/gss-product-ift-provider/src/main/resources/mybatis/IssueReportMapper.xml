<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tempus.gss.product.ift.dao.IssueReportDao">

    <resultMap id="IftReportResultMap" type="com.tempus.gss.product.ift.api.entity.IFTIssueReport">
        <result column="SUPPLIER_NAME" property="supplierName"/>
        <result column="TYPE" property="type"/>
        <result column="TICKET_DATE" property="ticketDate"/>
        <result column="SALE_ORDER_NO" property="saleOrderNo"/>
        <result column="ROUTING" property="routing"/>
        <result column="FLIGHT_NO" property="flightNo"/>
        <result column="CABIN" property="cabin"/>
        <result column="DEP_DATE" property="depDate"/>
        <result column="TICKET_NUM" property="ticketNum"/>
        <result column="RATE" property="rate"/>
        <result column="CURRENCY" property="currency"/>
        <result column="TRUE_PRICE" property="truePrice"/>
        <result column="SETTLE_PRICE" property="settlePrice"/>
        <result column="TAX" property="tax"/>
        <result column="TOTAL_PRICE" property="totalPrice"/>
        <result column="GROSS" property="gross"/>
        <result column="SALE_PERSON" property="salePerson"/>
        <result column="SALE_DEPT" property="saleDept"/>
        <result column="TICKET_PERSON" property="ticketPerson"/>
        <result column="MONTH_SETTLE" property="monthSettle"/>
        <result column="COMPANY" property="company"/>
        <result column="SETTLE_METHOD" property="settleMethod"/>
        <result column="PASSENGER_NAME" property="passengerName"/>
        <result column="GENDER" property="gender"/>
        <result column="SOURCE" property="source"/>
        <result column="REMARK" property="remark"/>
        <result column="CHANGE_TYPE" property="changeType"/>
    </resultMap>

    <select id="queryIFTIssueReport" parameterType="com.tempus.gss.product.ift.api.entity.IFTIssueReportParams" resultMap="IftReportResultMap">
        SELECT
        CS.NAME AS SUPPLIER_NAME,
        ISOE.SALE_ORDER_NO AS SALE_ORDER_NO,
        COUNT(DISTINCT ISOD.PASSENGER_NO) AS TICKET_NUM,
        ISOE.ISSUE_TIME AS TICKET_DATE,
        GROUP_CONCAT(DISTINCT ISOD.TICKET_NO) AS TICKET_NO,
        CONCAT((SELECT IL2.DEP_AIRPORT
        FROM IFT_LEG IL2
        WHERE IL2.SALE_ORDER_NO = ISOE.SALE_ORDER_NO
        GROUP BY IL2.SALE_ORDER_NO, IL2.LEG_NO
        ORDER BY IL2.DEP_TIME
        LIMIT 1), '-', (SELECT IL2.ARR_AIRPORT
        FROM IFT_LEG IL2
        WHERE IL2.SALE_ORDER_NO = ISOE.SALE_ORDER_NO
        GROUP BY IL2.SALE_ORDER_NO, IL2.LEG_NO
        ORDER BY IL2.DEP_TIME DESC
        LIMIT 1)) AS ROUTING,
        GROUP_CONCAT(DISTINCT IL.FLIGHT_NO) AS FLIGHT_NO,
        GROUP_CONCAT(DISTINCT IL.CABIN) AS CABIN,
        (SELECT IL2.DEP_TIME
        FROM IFT_LEG IL2
        WHERE IL2.SALE_ORDER_NO = ISOE.SALE_ORDER_NO
        GROUP BY IL2.SALE_ORDER_NO, IL2.LEG_NO
        ORDER BY IL2.DEP_TIME
        LIMIT 1) AS DEP_DATE,
        ISOE.EXCHANGE_RATE AS RATE,
        ISOE.CURRENCY AS CURRENCY,
        IP.SALE_FARE AS TRUE_PRICE,
        IP.SALE_PRICE AS SETTLE_PRICE,
        IP.SALE_TAX AS TAX,
        IP.SALE_PRICE AS TOTAL_PRICE,
        IP.SALE_PRICE - IP.BUY_PRICE - IP.BUY_TAX AS GROSS,
        ISOE.CREATOR AS SALE_PERSON,
        SD.NAME AS SALE_DEPT,
        SOI.SHORT_NAME AS COMPANY,
        GROUP_CONCAT(IP.SURNAME, '/', IP.NAME SEPARATOR ' ') AS PASSENGER_NAME,
        CASE WHEN IP.GENDER = 1
        THEN '男'
        ELSE '女' END AS GENDER,
        CC.BUSINESS_LINE AS SOURCE,
        ISOE.SALE_REMARK AS REMARK,
        ISOE.MODIFIER AS TICKET_PERSON
        FROM IFT_SALE_ORDER_EXT ISOE
        LEFT JOIN IFT_SALE_ORDER_DETAIL ISOD ON ISOD.SALE_ORDER_NO = ISOE.SALE_ORDER_NO
        LEFT JOIN OS_SALEORDER OS ON OS.SALE_ORDER_NO = ISOE.SALE_ORDER_NO
        LEFT JOIN CPS_CUSTOMER CC ON CC.CUSTOMER_NO = OS.CUSTOMER_NO
        LEFT JOIN OS_BUYORDER OB ON OB.SALE_ORDER_NO = OS.SALE_ORDER_NO
        LEFT JOIN IFT_BUY_ORDER_EXT IBOE ON IBOE.BUY_ORDER_NO = OB.BUY_ORDER_NO
        LEFT JOIN CPS_SUPPLIER CS ON CS.SUPPLIER_NO = OB.SUPPLIER_NO
        LEFT JOIN IFT_PASSENGER IP ON IP.PASSENGER_NO = ISOD.PASSENGER_NO
        LEFT JOIN IFT_LEG IL ON IL.LEG_NO = ISOD.LEG_NO
        LEFT JOIN SM_USER SU ON SU.LOGIN_NAME = ISOE.DRAWER_LOGIN_NAME
        LEFT JOIN SM_DEPT SD ON SD.ID = SU.DEPT_ID
        LEFT JOIN SM_OWNER_INFO SOI ON SOI.OWNER = ISOE.OWNER
        WHERE 1=1
        <if test="ticketDateStart !=null and ticketDateStart != '' ">
            AND ISOE.ISSUE_TIME<![CDATA[>=]]>DATE_FORMAT(#{ticketDateStart}, '%Y-%m-%d')
        </if>
        <if test="ticketDateEnd !=null  and ticketDateEnd != ''">
            AND ISOE.ISSUE_TIME<![CDATA[<=]]>DATE_FORMAT(STR_TO_DATE(#{ticketDateEnd}, '%Y-%m-%d')+1, '%Y-%m-%d')
        </if>
        <if test="depDateStart !=null and depDateStart != '' ">
            AND IL.DEP_TIME <![CDATA[>=]]>DATE_FORMAT(#{depDateStart}, '%Y-%m-%d')
        </if>
        <if test="depDateEnd !=null  and depDateEnd != ''">
            AND IL.DEP_TIME <![CDATA[<=]]>DATE_FORMAT(STR_TO_DATE(#{depDateEnd}, '%Y-%m-%d')+1, '%Y-%m-%d')
        </if>
        <if test="saleDept !=null and saleDept!=''">
            AND SD.NAME IN
            <foreach collection="saleDept" item="saleDept"
                     index="index" open="(" close=")" separator=",">
                #{saleDept[${index}]}
            </foreach>
        </if>
        <if test="source!=null and source!=''">
            AND CC.BUSINESS_LINE IN
            <foreach collection="source" item="source"
                     index="index" open="(" close=")" separator=",">
                #{source[${index}]}
            </foreach>
        </if>
        <if test="exactQuery ==null or exactQuery=='true'">
            <if test="surname!=null and surname!=''">
                AND IP.SURNAME= #{surname}
                AND IP.NAME== #{name}
            </if>
        </if>
        <if test="exactQuery !=null and exactQuery=='false'">
            <if test="name!=null and name!=''">
                AND  IP.NAME LIKE CONCAT('%', CONCAT(#{name}, '%'))
                OR LIKE CONCAT('%', CONCAT(#{surname}, '%'))
            </if>
        </if>
        <if test="company!=null and company!=''">
            <if test="exactQuery ==null or exactQuery=='true'">
                AND SOI.SHORT_NAME = #{company}
            </if>
            <if test="exactQuery !=null and exactQuery=='false'">
                AND SOI.SHORT_NAME LIKE CONCAT('%', CONCAT(#{company}, '%'))
            </if>

        </if>
        <if test="passengerName!=null and passengerName!=''">
            AND (IP.SURNAME LIKE CONCAT('%', CONCAT(#{passengerName}, '%'))
            OR IP.NAME LIKE CONCAT('%', CONCAT(#{passengerName}, '%'))
            )

        </if>
        <if test="ticketPerson!=null and ticketPerson!=''">
            <if test="exactQuery ==null or exactQuery=='true'">
                AND ISOE.MODIFIER = #{ticketPerson}
            </if>
            <if test="exactQuery !=null and exactQuery=='false'">
                AND ISOE.MODIFIER LIKE CONCAT('%', CONCAT(#{ticketPerson}, '%'))
            </if>
        </if>
        <if test="salePerson!=null and salePerson!=''">
            <if test="exactQuery == null or exactQuery=='true'">
                AND ISOE.CREATOR  = #{salePerson}
            </if>
            <if test="exactQuery !=null and exactQuery=='false'">
                AND ISOE.CREATOR LIKE CONCAT('%', CONCAT(#{salePerson}, '%'))
            </if>
        </if>
        <if test="cabins!=null and cabins!=''">
            AND IL.CABIN IN
            <foreach collection="cabins" item="cabins"
                     index="index" open="(" close=")" separator=",">
                #{cabins[${index}]}
            </foreach>
        </if>
        <if test="flightNo!=null and flightNo!=''">
            <if test="exactQuery ==null or exactQuery=='true'">
                AND IL.FLIGHT_NO = #{flightNo}
            </if>
            <if test="exactQuery !=null and exactQuery=='false'">
                AND IL.FLIGHT_NO LIKE CONCAT('%', CONCAT(#{flightNo}, '%'))
            </if>

        </if>
        <if test="ticketNo!=null and ticketNo!=''">
            <if test="exactQuery ==null or exactQuery=='true'">
                AND ISOD.TICKET_NO = #{ticketNo}
            </if>
            <if test="ticketNo !=null and ticketNo=='false'">
                AND ISOD.TICKET_NO LIKE CONCAT('%', CONCAT(#{ticketNo}, '%'))
            </if>
        </if>
        <if test="saleOrderNo!=null and saleOrderNo!=''">
            AND ISOE.SALE_ORDER_NO = #{saleOrderNo}
        </if>
        <if test="supplierName!=null and supplierName!=''">
            <if test="exactQuery ==null or exactQuery=='true'">
                AND CS.NAME  = #{supplierName}
            </if>
            <if test="exactQuery !=null and exactQuery=='false'">
                AND CS.NAME LIKE CONCAT('%', CONCAT(#{supplierName}, '%'))
            </if>

        </if>
        <if test="orderStatusArray!=null and orderStatusArray!='' ">
            AND ISOD.STATUS IN
            <foreach collection="orderStatusArray" item="orderStatusArray"
                     index="index" open="(" close=")" separator=",">
                #{orderStatusArray[${index}]}
            </foreach>
        </if>
        <if test="orderStatusArray==null or orderStatusArray=='' ">
            AND ISOD.STATUS IN (4, 10)
        </if>
        GROUP BY ISOD.SALE_ORDER_NO
        ORDER BY ISOE.ISSUE_TIME
    </select>


    <select id="queryIssueDeptNameList" resultType="java.lang.String">
        SELECT DISTINCT SD.NAME AS SALE_DEPT
        FROM IFT_SALE_ORDER_EXT ISOE
            LEFT JOIN SM_USER SU ON SU.LOGIN_NAME = ISOE.DRAWER_LOGIN_NAME
            LEFT JOIN SM_DEPT SD ON SD.ID = SU.DEPT_ID
        WHERE SD.NAME IS NOT NULL
    </select>

    <select id="queryIssueCabins" resultType="java.lang.String">
        SELECT
            DISTINCT IL.CABIN AS CABIN
        FROM IFT_SALE_ORDER_EXT ISOE LEFT JOIN IFT_SALE_ORDER_DETAIL ISOD ON ISOD.SALE_ORDER_NO = ISOE.SALE_ORDER_NO
            LEFT JOIN IFT_LEG IL ON IL.LEG_NO = ISOD.LEG_NO
        WHERE IL.CABIN IS NOT NULL

    </select>

</mapper>