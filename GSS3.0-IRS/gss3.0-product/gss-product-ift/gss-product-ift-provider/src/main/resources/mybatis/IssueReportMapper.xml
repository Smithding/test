<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tempus.gss.product.ift.dao.IssueReportDao">

    <resultMap id="IftReportResultMap" type="com.tempus.gss.product.ift.api.entity.IFTIssueReport">
        <result column="SALE_DEPT" property="saleDept"/>
        <result column="CUSTOMER_NAME" property="customerName"/>
        <result column="CUSTOMER_NO" property="customerNo"/>
        <result column="AIRLINE" property="airline"/>
        <result column="TICKET_NO" property="ticketNo"/>
        <result column="ROUTING" property="routing"/>
        <result column="FLIGHT_NO" property="flightNo"/>
        <result column="CABIN" property="cabin"/>
        <result column="TICKET_DATE" property="ticketDate"/>
        <result column="DEP_DATE" property="depDate"/>
        <result column="FARE_PRICE" property="farePrice"/>
        <result column="TAX" property="tax"/>
        <result column="SALE_REBATE" property="saleRebate"/>
        <result column="REBATE_PRICE" property="rebatePrice"/>
        <result column="SALE_PRICE" property="salePrice"/>
        <result column="SERVICE_CHARGE" property="serviceCharge"/>
        <result column="PASSENGER_NAME" property="passengerName"/>
        <result column="PNR" property="pnr"/>
        <result column="TICKET_TYPE" property="ticketType"/>
        <result column="SALE_PERSON" property="salePerson"/>
        <result column="TICKET_PERSON" property="ticketPerson"/>
        <result column="SUPPLIER_NAME" property="supplierName"/>
        <result column="SALE_ORDER_NO" property="saleOrderNo"/>
        <result column="PAY_WAY" property="payWay"/>
        <result column="PAY_NO" property="payNo"/>
        <result column="ITINERARY_NO" property="itineraryNo"/>
        <result column="SETTLE_PRICE" property="settlePrice"/>
        <result column="EXCHANGE_RATE" property="exchangeRate"/>
        <result column="CURRENCY" property="currency"/>
        <result column="COMPANY" property="company"/>
        <result column="SOURCE" property="source"/>
    </resultMap>
    <select id="queryIFTIssued" parameterType="com.tempus.gss.product.ift.api.entity.IFTIssueReportParams" resultMap="IftReportResultMap">
        SELECT
        SD.NAME AS SALE_DEPT,
        CC.NAME AS CUSTOMER_NAME,
        CC.CUSTOMER_NO AS CUSTOMER_NO,
        GROUP_CONCAT(DISTINCT IL.AIRLINE) AS AIRLINE,
        GROUP_CONCAT(DISTINCT ISOD.TICKET_NO) AS TICKET_NO,
        GROUP_CONCAT(DISTINCT CONCAT(IL.DEP_AIRPORT, '-', IL.ARR_AIRPORT)) AS ROUTING,
        GROUP_CONCAT(DISTINCT IL.FLIGHT_NO) AS FLIGHT_NO,
        GROUP_CONCAT(DISTINCT IL.CABIN) AS CABIN,
        ISOE.ISSUE_TIME AS TICKET_DATE,
        (
        SELECT IL2.DEP_TIME
        FROM IFT_LEG IL2
        WHERE IL2.SALE_ORDER_NO = ISOE.SALE_ORDER_NO
        GROUP BY IL2.SALE_ORDER_NO, IL2.LEG_NO
        ORDER BY IL2.DEP_TIME
        LIMIT 1)
        AS DEP_DATE,
         IP.SALE_FARE AS FARE_PRICE,
         IP.SALE_TAX AS TAX,
         IP.SALE_BROKERAGE AS SALE_BROKERAGE,
        GROUP_CONCAT(DISTINCT IP.SALE_REBATE) AS SALE_REBATE,
         IP.SALE_AWARD_PRICE*IP.SALE_REBATE/100 AS REBATE_PRICE,
         IP.SALE_PRICE AS SALE_PRICE,
         IP.SERVICE_CHARGE AS SERVICE_CHARGE,
        GROUP_CONCAT(DISTINCT CONCAT(IP.SURNAME, '/', IP.NAME)) AS PASSENGER_NAME,
        PNR.PNR AS PNR,
        '出票' AS TICKET_TYPE,
        ISOE.CREATOR AS SALE_PERSON,
        SU.NAME AS TICKET_PERSON,
        CS.NAME AS SUPPLIER_NAME,
        ISOE.SALE_ORDER_NO AS SALE_ORDER_NO,
        PPW.NAME AS PAY_WAY,
        PAPI.ALL_PAY_INFO_NO AS PAY_NO,
        (
        SELECT LDI.ITINERARY_NO
        FROM LS_DELIVERY_ITINERARY LDI
        WHERE LDI.TICKET_NO = ISOD.TICKET_NO
        LIMIT 1) AS ITINERARY_NO,
        IP.SALE_PRICE AS SETTLE_PRICE,
        ISOE.EXCHANGE_RATE AS EXCHANGE_RATE,
        ISOE.CURRENCY AS CURRENCY,
        SOI.SHORT_NAME AS COMPANY,
        CC.BUSINESS_LINE AS SOURCE
        FROM IFT_SALE_ORDER_EXT ISOE
        LEFT JOIN IFT_SALE_ORDER_DETAIL ISOD ON ISOD.SALE_ORDER_NO = ISOE.SALE_ORDER_NO
        LEFT JOIN IFT_PNR PNR ON PNR.PNR_NO = ISOE.PNR_NO
        LEFT JOIN OS_SALEORDER OS ON OS.SALE_ORDER_NO = ISOE.SALE_ORDER_NO
        LEFT JOIN CPS_CUSTOMER CC ON CC.CUSTOMER_NO = OS.CUSTOMER_NO
        LEFT JOIN OS_BUYORDER OB ON OB.SALE_ORDER_NO = OS.SALE_ORDER_NO
        LEFT JOIN IFT_BUY_ORDER_EXT IBOE ON IBOE.BUY_ORDER_NO = OB.BUY_ORDER_NO
        LEFT JOIN CPS_SUPPLIER CS ON CS.SUPPLIER_NO = OB.SUPPLIER_NO
        LEFT JOIN IFT_PASSENGER IP ON IP.PASSENGER_NO = ISOD.PASSENGER_NO
        LEFT JOIN IFT_LEG IL ON IL.LEG_NO = ISOD.LEG_NO
        LEFT JOIN SM_USER SU ON SU.LOGIN_NAME = ISOE.DRAWER_LOGIN_NAME
        LEFT JOIN SM_DEPT SD ON SD.ID = SU.DEPT_ID
        LEFT JOIN SM_OWNER_INFO SOI ON SOI.OWNER = ISOE.OWNER
        LEFT JOIN OS_ACTUALAMOUNTRECORD OA ON OA.RECORD_NO = ISOE.SALE_ORDER_NO
        LEFT JOIN PS_ALL_PAY_INFO PAPI ON PAPI.ALL_PAY_INFO_NO = OA.PAY_NO
        LEFT JOIN PS_PAY_WAY PPW ON PPW.CODE = PAPI.PAY_WAY_CODE
        WHERE 1=1
        <if test="ticketDateStart !=null and ticketDateStart != '' ">
            AND ISOE.ISSUE_TIME<![CDATA[>=]]>DATE_FORMAT(#{ticketDateStart}, '%Y-%m-%d')
        </if>
        <if test="ticketDateEnd !=null  and ticketDateEnd != ''">
            AND ISOE.ISSUE_TIME<![CDATA[<=]]>DATE_FORMAT(STR_TO_DATE(#{ticketDateEnd}, '%Y-%m-%d')+1, '%Y-%m-%d')
        </if>
        <if test="depDateStart !=null and depDateStart != '' ">
            AND IL.DEP_TIME <![CDATA[>=]]>DATE_FORMAT(#{depDateStart}, '%Y-%m-%d')
        </if>
        <if test="depDateEnd !=null  and depDateEnd != ''">
            AND IL.DEP_TIME <![CDATA[<=]]>DATE_FORMAT(STR_TO_DATE(#{depDateEnd}, '%Y-%m-%d')+1, '%Y-%m-%d')
        </if>
        <if test="saleDept !=null and saleDept!=''">
            AND SD.NAME IN
            <foreach collection="saleDept" item="saleDept"
                     index="index" open="(" close=")" separator=",">
                #{saleDept[${index}]}
            </foreach>
        </if>
        <if test="source!=null and source!=''">
            AND CC.BUSINESS_LINE IN
            <foreach collection="source" item="source"
                     index="index" open="(" close=")" separator=",">
                #{source[${index}]}
            </foreach>
        </if>
        <if test="exactQuery ==null or exactQuery=='true'">
            <if test="surname!=null and surname!=''">
                AND IP.SURNAME= #{surname}
                AND IP.NAME== #{name}
            </if>
        </if>
        <if test="exactQuery !=null and exactQuery=='false'">
            <if test="name!=null and name!=''">
                AND  IP.NAME LIKE CONCAT('%', CONCAT(#{name}, '%'))
                OR LIKE CONCAT('%', CONCAT(#{surname}, '%'))
            </if>
        </if>
        <if test="company!=null and company!=''">
            <if test="exactQuery ==null or exactQuery=='true'">
                AND SOI.SHORT_NAME = #{company}
            </if>
            <if test="exactQuery !=null and exactQuery=='false'">
                AND SOI.SHORT_NAME LIKE CONCAT('%', CONCAT(#{company}, '%'))
            </if>

        </if>
        <if test="passengerName!=null and passengerName!=''">
            AND (IP.SURNAME LIKE CONCAT('%', CONCAT(#{passengerName}, '%'))
            OR IP.NAME LIKE CONCAT('%', CONCAT(#{passengerName}, '%'))
            )

        </if>
        <if test="ticketPerson!=null and ticketPerson!=''">
            <if test="exactQuery ==null or exactQuery=='true'">
                AND ISOE.MODIFIER = #{ticketPerson}
            </if>
            <if test="exactQuery !=null and exactQuery=='false'">
                AND ISOE.MODIFIER LIKE CONCAT('%', CONCAT(#{ticketPerson}, '%'))
            </if>
        </if>
        <if test="salePerson!=null and salePerson!=''">
            <if test="exactQuery == null or exactQuery=='true'">
                AND ISOE.CREATOR  = #{salePerson}
            </if>
            <if test="exactQuery !=null and exactQuery=='false'">
                AND ISOE.CREATOR LIKE CONCAT('%', CONCAT(#{salePerson}, '%'))
            </if>
        </if>
        <if test="cabins!=null and cabins!=''">
            AND IL.CABIN IN
            <foreach collection="cabins" item="cabins"
                     index="index" open="(" close=")" separator=",">
                #{cabins[${index}]}
            </foreach>
        </if>
        <if test="flightNo!=null and flightNo!=''">
            <if test="exactQuery ==null or exactQuery=='true'">
                AND IL.FLIGHT_NO = #{flightNo}
            </if>
            <if test="exactQuery !=null and exactQuery=='false'">
                AND IL.FLIGHT_NO LIKE CONCAT('%', CONCAT(#{flightNo}, '%'))
            </if>

        </if>
        <if test="ticketNo!=null and ticketNo!=''">
            <if test="exactQuery ==null or exactQuery=='true'">
                AND ISOD.TICKET_NO = #{ticketNo}
            </if>
            <if test="ticketNo !=null and ticketNo=='false'">
                AND ISOD.TICKET_NO LIKE CONCAT('%', CONCAT(#{ticketNo}, '%'))
            </if>
        </if>
        <if test="saleOrderNo!=null and saleOrderNo!=''">
            AND ISOE.SALE_ORDER_NO = #{saleOrderNo}
        </if>
        <if test="supplierName!=null and supplierName!=''">
            <if test="exactQuery ==null or exactQuery=='true'">
                AND CS.NAME  = #{supplierName}
            </if>
            <if test="exactQuery !=null and exactQuery=='false'">
                AND CS.NAME LIKE CONCAT('%', CONCAT(#{supplierName}, '%'))
            </if>

        </if>
        <if test="orderStatusArray!=null and orderStatusArray!='' ">
            AND ISOD.STATUS IN
            <foreach collection="orderStatusArray" item="orderStatusArray"
                     index="index" open="(" close=")" separator=",">
                #{orderStatusArray[${index}]}
            </foreach>
        </if>
        <if test="orderStatusArray==null or orderStatusArray=='' ">
            AND   ISOD.STATUS BETWEEN 4 AND 10
        </if>
        AND ISOD.IS_CHANGE = 0
        GROUP BY ISOD.SALE_ORDER_NO, ISOD.TICKET_NO
        ORDER BY ISOE.ISSUE_TIME DESC
    </select>

    <select id="queryIFTChanged" parameterType="com.tempus.gss.product.ift.api.entity.IFTIssueReportParams" resultMap="IftReportResultMap">
        SELECT
        SD.NAME AS SALE_DEPT,
        CC.NAME AS CUSTOMER_NAME,
        CC.CUSTOMER_NO AS CUSTOMER_NO,
        GROUP_CONCAT(DISTINCT IL.AIRLINE) AS AIRLINE,
        ISOD.TICKET_NO AS TICKET_NO,
        GROUP_CONCAT(DISTINCT CONCAT(IL.DEP_AIRPORT, '-', IL.ARR_AIRPORT)) AS ROUTING,
        GROUP_CONCAT(DISTINCT IL.FLIGHT_NO) AS FLIGHT_NO,
        GROUP_CONCAT(DISTINCT IL.CABIN) AS CABIN,
        ISOD.MODIFY_TIME AS TICKET_DATE,
        (
        SELECT IL2.DEP_TIME
        FROM IFT_LEG IL2
        WHERE IL2.LEG_NO = ISOD.LEG_NO
        GROUP BY IL2.SALE_ORDER_NO, IL2.LEG_NO
        ORDER BY IL2.DEP_TIME
        LIMIT 1)
        AS DEP_DATE,
        IPCP.SALE_COUNT_PRICE AS FARE_PRICE,
        IPCP.SALE_TAX AS TAX,
        GROUP_CONCAT(DISTINCT IPCP.SALE_REBATE) AS SALE_REBATE,
        IPCP.SALE_BROKERAGE AS SALE_BROKERAGE,
        (IPCP.SALE_PRICE+IP.SALE_AWARD_PRICE)*IPCP.SALE_REBATE/100 AS REBATE_PRICE,
        IPCP.SALE_COUNT_PRICE AS SALE_PRICE,
        IPCP.SALE_REST AS SERVICE_CHARGE,
        GROUP_CONCAT(DISTINCT CONCAT(IP.SURNAME, '/', IP.NAME)) AS PASSENGER_NAME,
        PNR.PNR AS PNR,
        CASE WHEN ISCE.TICKET_CHANGE_TYPE = 1
        THEN '升舱'
        WHEN ISCE.TICKET_CHANGE_TYPE = 2
        THEN '改期'
        WHEN ISCE.TICKET_CHANGE_TYPE = 3
        THEN '换开'
        END AS TICKET_TYPE,
        ISCE.CREATOR AS SALE_PERSON,
        SU.NAME AS TICKET_PERSON,
        CS.NAME AS SUPPLIER_NAME,
        ISCE.SALE_CHANGE_NO AS SALE_ORDER_NO,
        PPW.NAME AS PAY_WAY,
        PAPI.ALL_PAY_INFO_NO AS PAY_NO,
        (
        SELECT LDI.ITINERARY_NO
        FROM LS_DELIVERY_ITINERARY LDI
        WHERE LDI.TICKET_NO = ISOD.TICKET_NO
        LIMIT 1) AS ITINERARY_NO,
        IPCP.SALE_COUNT_PRICE AS SETTLE_PRICE,
        ISCE.EXCHANGE_RATE AS EXCHANGE_RATE,
        ISCE.CURRENCY AS CURRENCY,
        SOI.SHORT_NAME AS COMPANY,
        CC.BUSINESS_LINE AS SOURCE
        FROM IFT_SALE_CHANGE_EXT ISCE
        LEFT JOIN IFT_SALE_ORDER_DETAIL ISOD ON ISOD.SALE_ORDER_NO = ISCE.SALE_CHANGE_NO
        LEFT JOIN IFT_PNR PNR ON PNR.PNR_NO = ISCE.PNR_NO
        LEFT JOIN OS_SALECHANGE OS ON OS.SALE_CHANGE_NO = ISCE.SALE_CHANGE_NO
        LEFT JOIN OS_SALECHANGE_EXTEND OSCE ON OSCE.SALE_CHANGE_NO = ISCE.SALE_CHANGE_NO
        LEFT JOIN CPS_CUSTOMER CC ON CC.CUSTOMER_NO = OSCE.CUSTOMER_NO
        LEFT JOIN OS_BUYORDER OB ON OB.SALE_ORDER_NO = OS.SALE_ORDER_NO
        LEFT JOIN IFT_BUY_ORDER_EXT IBOE ON IBOE.BUY_ORDER_NO = OB.BUY_ORDER_NO
        LEFT JOIN CPS_SUPPLIER CS ON CS.SUPPLIER_NO = OB.SUPPLIER_NO
        LEFT JOIN IFT_PASSENGER IP ON IP.PASSENGER_NO = ISOD.PASSENGER_NO
        LEFT JOIN IFT_LEG IL ON IL.LEG_NO = ISOD.LEG_NO
        LEFT JOIN SM_USER SU ON SU.LOGIN_NAME = ISCE.DRAWER_LOGIN_NAME
        LEFT JOIN SM_DEPT SD ON SD.ID = SU.DEPT_ID
        LEFT JOIN SM_OWNER_INFO SOI ON SOI.OWNER = ISCE.OWNER
        LEFT JOIN OS_ACTUALAMOUNTRECORD OA ON OA.RECORD_NO = ISCE.SALE_CHANGE_NO
        LEFT JOIN PS_ALL_PAY_INFO PAPI ON PAPI.ALL_PAY_INFO_NO = OA.PAY_NO
        LEFT JOIN PS_PAY_WAY PPW ON PPW.CODE = PAPI.PAY_WAY_CODE
        LEFT JOIN IFT_PASSENGER_CHANGE_PRICE IPCP ON IPCP.PASSENGER_NO = ISOD.PASSENGER_NO
        WHERE 1=1
        <if test="ticketDateStart !=null and ticketDateStart != '' ">
            AND ISOD.MODIFY_TIME<![CDATA[>=]]>DATE_FORMAT(#{ticketDateStart}, '%Y-%m-%d')
        </if>
        <if test="ticketDateEnd !=null  and ticketDateEnd != ''">
            AND ISOD.MODIFY_TIME<![CDATA[<=]]>DATE_FORMAT(STR_TO_DATE(#{ticketDateEnd}, '%Y-%m-%d')+1, '%Y-%m-%d')
        </if>
        <if test="depDateStart !=null and depDateStart != '' ">
            AND IL.DEP_TIME <![CDATA[>=]]>DATE_FORMAT(#{depDateStart}, '%Y-%m-%d')
        </if>
        <if test="depDateEnd !=null  and depDateEnd != ''">
            AND IL.DEP_TIME <![CDATA[<=]]>DATE_FORMAT(STR_TO_DATE(#{depDateEnd}, '%Y-%m-%d')+1, '%Y-%m-%d')
        </if>
        <if test="saleDept !=null and saleDept!=''">
            AND SD.NAME IN
            <foreach collection="saleDept" item="saleDept"
                     index="index" open="(" close=")" separator=",">
                #{saleDept[${index}]}
            </foreach>
        </if>
        <if test="source!=null and source!=''">
            AND CC.BUSINESS_LINE IN
            <foreach collection="source" item="source"
                     index="index" open="(" close=")" separator=",">
                #{source[${index}]}
            </foreach>
        </if>
        <if test="exactQuery ==null or exactQuery=='true'">
            <if test="surname!=null and surname!=''">
                AND IP.SURNAME= #{surname}
                AND IP.NAME== #{name}
            </if>
        </if>
        <if test="exactQuery !=null and exactQuery=='false'">
            <if test="name!=null and name!=''">
                AND  IP.NAME LIKE CONCAT('%', CONCAT(#{name}, '%'))
                OR LIKE CONCAT('%', CONCAT(#{surname}, '%'))
            </if>
        </if>
        <if test="company!=null and company!=''">
            <if test="exactQuery ==null or exactQuery=='true'">
                AND SOI.SHORT_NAME = #{company}
            </if>
            <if test="exactQuery !=null and exactQuery=='false'">
                AND SOI.SHORT_NAME LIKE CONCAT('%', CONCAT(#{company}, '%'))
            </if>

        </if>
        <if test="passengerName!=null and passengerName!=''">
            AND (IP.SURNAME LIKE CONCAT('%', CONCAT(#{passengerName}, '%'))
            OR IP.NAME LIKE CONCAT('%', CONCAT(#{passengerName}, '%'))
            )

        </if>
        <if test="ticketPerson!=null and ticketPerson!=''">
            <if test="exactQuery ==null or exactQuery=='true'">
                AND ISOE.MODIFIER = #{ticketPerson}
            </if>
            <if test="exactQuery !=null and exactQuery=='false'">
                AND ISOE.MODIFIER LIKE CONCAT('%', CONCAT(#{ticketPerson}, '%'))
            </if>
        </if>
        <if test="salePerson!=null and salePerson!=''">
            <if test="exactQuery == null or exactQuery=='true'">
                AND ISOE.CREATOR  = #{salePerson}
            </if>
            <if test="exactQuery !=null and exactQuery=='false'">
                AND ISOE.CREATOR LIKE CONCAT('%', CONCAT(#{salePerson}, '%'))
            </if>
        </if>
        <if test="cabins!=null and cabins!=''">
            AND IL.CABIN IN
            <foreach collection="cabins" item="cabins"
                     index="index" open="(" close=")" separator=",">
                #{cabins[${index}]}
            </foreach>
        </if>
        <if test="flightNo!=null and flightNo!=''">
            <if test="exactQuery ==null or exactQuery=='true'">
                AND IL.FLIGHT_NO = #{flightNo}
            </if>
            <if test="exactQuery !=null and exactQuery=='false'">
                AND IL.FLIGHT_NO LIKE CONCAT('%', CONCAT(#{flightNo}, '%'))
            </if>

        </if>
        <if test="ticketNo!=null and ticketNo!=''">
            <if test="exactQuery ==null or exactQuery=='true'">
                AND ISOD.TICKET_NO = #{ticketNo}
            </if>
            <if test="ticketNo !=null and ticketNo=='false'">
                AND ISOD.TICKET_NO LIKE CONCAT('%', CONCAT(#{ticketNo}, '%'))
            </if>
        </if>
        <if test="saleOrderNo!=null and saleOrderNo!=''">
            AND ISOE.SALE_ORDER_NO = #{saleOrderNo}
        </if>
        <if test="supplierName!=null and supplierName!=''">
            <if test="exactQuery ==null or exactQuery=='true'">
                AND CS.NAME  = #{supplierName}
            </if>
            <if test="exactQuery !=null and exactQuery=='false'">
                AND CS.NAME LIKE CONCAT('%', CONCAT(#{supplierName}, '%'))
            </if>

        </if>
        <if test="orderStatusArray!=null and orderStatusArray!='' ">
            AND ISOD.STATUS IN
            <foreach collection="orderStatusArray" item="orderStatusArray"
                     index="index" open="(" close=")" separator=",">
                #{orderStatusArray[${index}]}
            </foreach>
        </if>
        <if test="orderStatusArray==null or orderStatusArray=='' ">
            AND  ISOD.STATUS = 4
        </if>
        AND ISOD.IS_CHANGE = 1
        GROUP BY ISOD.SALE_ORDER_NO, ISOD.TICKET_NO
        ORDER BY ISOD.MODIFY_TIME DESC
    </select>

    <select id="queryIssueDeptNameList" resultType="java.lang.String">
        (SELECT DISTINCT SD.NAME AS SALE_DEPT
         FROM IFT_SALE_ORDER_EXT ISOE
             LEFT JOIN SM_USER SU ON SU.LOGIN_NAME = ISOE.DRAWER_LOGIN_NAME
             LEFT JOIN SM_DEPT SD ON SD.ID = SU.DEPT_ID
         WHERE SD.NAME IS NOT NULL)
        UNION (
            SELECT DISTINCT SD.NAME AS SALE_DEPT
            FROM IFT_SALE_CHANGE_EXT ISCE
                LEFT JOIN SM_USER SU ON SU.LOGIN_NAME = ISCE.DRAWER_LOGIN_NAME
                LEFT JOIN SM_DEPT SD ON SD.ID = SU.DEPT_ID
            WHERE SD.NAME IS NOT NULL)
    </select>

    <select id="queryIssueCabins" resultType="java.lang.String">
        (SELECT DISTINCT IL.CABIN AS CABIN
         FROM IFT_SALE_ORDER_EXT ISOE
             LEFT JOIN IFT_SALE_ORDER_DETAIL ISOD ON ISOD.SALE_ORDER_NO = ISOE.SALE_ORDER_NO
             LEFT JOIN IFT_LEG IL ON IL.LEG_NO = ISOD.LEG_NO
         WHERE IL.CABIN IS NOT NULL)
        UNION (
            SELECT DISTINCT IL.CABIN AS CABIN
            FROM IFT_SALE_CHANGE_EXT ISCE
                LEFT JOIN IFT_SALE_ORDER_DETAIL ISOD ON ISOD.SALE_ORDER_NO = ISCE.SALE_CHANGE_NO
                LEFT JOIN IFT_LEG IL ON IL.LEG_NO = ISOD.LEG_NO
            WHERE IL.CABIN IS NOT NULL)

    </select>

    <select id="iftBuyReport" resultType="com.tempus.gss.product.ift.api.entity.IftBuyReport">
        select
        obo.SALE_ORDER_NO as saleOrderNo,
        obo.BUY_ORDER_NO as buyOrderNo,
        obo.BUYER as buyer,
        obo.BUYING_TIME as buyTime,
        oboe.SUPPLIER_TYPE_NAME as supplierType,
        oboe.SUPPLIER_NO_NAME as supplierName,
        ibo.AIRLINE as airline,
        ibo.TICKET_TYPE as ticketType,
        ibo.BUY_REMARKE as remark,
        concat(ip.SURNAME, '/', ip.SURNAME,'(',ip.PASSENGER_TYPE,')') as passengerName,
        ip.BUY_CURRENCY as currency,
        isod.TICKET_NO as ticketNo,
        group_concat(isod.LEG_NO) as legNos,
        ip.BUY_EXCHANGE_RATE as rate,
        ip.BUY_FARE as fare,
        ip.BUY_BROKERAGE as brokerage,
        ip.BUY_TAX as tax,
        ipnr.PNR as pnr,
        osoe.CUSTOMER_NO_NAME as customName,
        osoe.CUSTOMER_TYPE_NAME as customType,
        oso.CUSTOMER_NO as customNo,
        oso.ORDERING_LOGIN_NAME as saler,
        sd.NAME as dept,
        sub.NAME as modifier,
        soi.SHORT_NAME as owner
        from OS_BUYORDER obo
        join OS_BUYORDER_EXTEND oboe on obo.BUY_ORDER_NO = oboe.BUY_ORDER_NO
        join IFT_BUY_ORDER_EXT ibo on ibo.BUY_ORDER_NO = obo.BUY_ORDER_NO
        join IFT_BUY_ORDER_DETAIL ibod on ibod.BUY_ORDER_NO = obo.BUY_ORDER_NO
        join OS_SALEORDER_EXTEND osoe on osoe.SALE_ORDER_NO = obo.SALE_ORDER_NO
        join OS_SALEORDER oso on oso.SALE_ORDER_NO = obo.SALE_ORDER_NO
        join IFT_SALE_ORDER_EXT isoe on isoe.SALE_ORDER_NO = obo.SALE_ORDER_NO
        join IFT_SALE_ORDER_DETAIL isod on isod.SALE_ORDER_DETAIL_NO = ibod.SALE_ORDER_DETAIL_NO
        join IFT_PASSENGER ip on ip.PASSENGER_NO = isod.PASSENGER_NO
        left join IFT_PNR ipnr on ipnr.PNR_NO = isoe.PNR_NO
        left join SM_USER sub on sub.LOGIN_NAME = obo.MODIFIER
        left join SM_DEPT sd on sd.ID = sub.DEPT_ID
        left join SM_OWNER_INFO soi on soi.OWNER = obo.OWNER
        where
        obo.GOODS_TYPE = 2 and obo.PAY_STATUS in (3,4) and obo.BSIGN_TYPE = 1 and obo.BUY_STATUS = 5
        <if test="ticketDateStart != null and ticketDateStart != ''">
            and <![CDATA[ obo.BUYING_TIME > str_to_date(#{ticketDateStart}, '%Y-%m-%d')
            ]]>
        </if>
        <if test="ticketDateEnd != null and ticketDateEnd != ''">
            and <![CDATA[ obo.BUYING_TIME < date_add(STR_TO_DATE(#{ticketDateEnd}, '%Y-%m-%d'), interval 1 day )
            ]]>
        </if>
        group by isod.PASSENGER_NO
        order by obo.BUYING_TIME desc
    </select>

    <select id="selectLegsByBuyOrderNo" resultType="com.tempus.gss.product.ift.api.entity.IftBuyReport"
            parameterType="java.lang.String">
        select
        group_concat(concat(DEP_AIRPORT, '-', ARR_AIRPORT) order by PARENT_SECTION,CHILD_SECTION) as routing,
        group_concat(concat(AIRLINE, FLIGHT_NO) order by PARENT_SECTION,CHILD_SECTION) as flightNo,
        group_concat(CABIN order by PARENT_SECTION,CHILD_SECTION) as cabin
        from IFT_LEG
        where LEG_NO in
        <trim prefix="(" suffix=")">
            #{legNos}
        </trim>
    </select>
</mapper>